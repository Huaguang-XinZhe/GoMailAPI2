name: Build and Deploy

on:
  push:
    branches: [main, master] # 当推送到主分支时触发
  workflow_dispatch: # 允许手动触发

env:
  DOCKER_IMAGE: mufeng888/gomailapi2-server
  DOCKER_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64 # 指定平台
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/ubuntu/app/GoMailAPI2

            # 拉取最新代码（包含最新的 compose 文件）
            git pull origin main

            # 停止当前服务
            docker compose -f compose.prod.yaml down

            # 移除旧镜像（可选，节省空间）
            docker image prune -a -f

            # 拉取最新镜像并启动服务
            docker compose -f compose.prod.yaml pull
            docker compose -f compose.prod.yaml up -d

            # 查看服务状态
            docker compose -f compose.prod.yaml ps

            echo "部署完成！"
